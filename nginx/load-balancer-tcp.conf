stream {

    server {
        listen     12345;
        #TCP traffic will be forwarded to the "stream_backend" upstream group
        proxy_pass stream_backend;
    }

    server {
        listen     12346;
        #TCP traffic will be forwarded to the specified server
        proxy_pass backend.example.com:12346;
    }

    server {
        listen     53 udp;
        #UDP traffic will be forwarded to the "dns_servers" upstream group
        proxy_pass dns_servers;
    }
}

###
# stream {
#     server { listen 172.31.49.97:2023; proxy_pass 10.0.3.4:21; }
#     server { listen 172.31.14.47:2024; proxy_pass 10.0.3.4:22; }
#     server { listen 172.31.49.97:20; proxy_pass 10.0.3.4:20; }
# }

###
Example with SSL Certificate

stream {

    upstream backend {
        server backend1.example.com:12345;
        server backend2.example.com:12345;
        server backend3.example.com:12345;
   }

    server {
        listen     12345;
        proxy_pass backend;
        proxy_ssl  on;

        proxy_ssl_certificate         /etc/ssl/certs/backend.crt;
        proxy_ssl_certificate_key     /etc/ssl/certs/backend.key;
        proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
        proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
        proxy_ssl_trusted_certificate /etc/ssl/certs/trusted_ca_cert.crt;

        proxy_ssl_verify        on;
        proxy_ssl_verify_depth  2;
        proxy_ssl_session_reuse on;
    }
}

# https://docs.nginx.com/nginx/admin-guide/load-balancer/tcp-udp-load-balancer/
# https://docs.nginx.com/nginx/admin-guide/security-controls/securing-tcp-traffic-upstream/